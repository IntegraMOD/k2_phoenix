<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="modx.prosilver.en.xsl"?>
<!--NOTICE: Please open this file in your web browser. If presented with a security warning, you may safely tell it to allow the blocked content.-->
<!--For security purposes, please check: http://www.phpbb.com/mods/ for the latest version of this MOD.\nAlthough MODs are checked before being allowed in the MODs Database there is no guarantee that there are no security problems within the MOD.\nNo support will be given for MODs not found within the MODs Database which can be found at http://www.phpbb.com/mods/-->
<mod xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://www.phpbb.com/mods/xml/modx-1.2.6.xsd">
	<header>
		<meta name="generator" content="MODX file generated with PP MODX Creator by tumba25 (online version)"/>
		<license><![CDATA[http://opensource.org/licenses/gpl-license.php GNU General Public License v2]]></license>
		<title lang="en"><![CDATA[Kiss Portal Engine - Update from 1.0.20 to 1.0.21]]></title>
		<description lang="en"><![CDATA[Update to 1.0.21]]></description>
		<author-notes lang="en"><![CDATA[...]]></author-notes>
		<author-group>
			<author>
				<realname><![CDATA[Michael O'Toole]]></realname>
				<username><![CDATA[michaelo]]></username>
				<homepage><![CDATA[http://www.phpbbireland.com/]]></homepage>
				<email><![CDATA[o2l@eircom.net]]></email>
			</author>
		</author-group>
		<mod-version>1.0.21</mod-version>
		<installation>
			<level>easy</level>
			<time>600</time>
			<target-version>3.0.12</target-version>
		</installation>
		<link-group>
			<link type="parent" href="../install.xml" lang="en">Main Install Instructions</link>
		</link-group>
	</header>
	<action-group>
		<copy>
			<file from="root/*.*" to="*.*"/>
		</copy>
		<open src="common.php">
			<edit>
				<find><![CDATA[@define('STARGATE', ($config['portal_enabled']));

if (STARGATE)
{
	@define('DEBUG_QUERIES', false);
	$k_config		= $cache->obtain_k_config();    // 1 query
	$k_resources	= $cache->obtain_k_resources(); // 1 query
	$k_groups		= $cache->obtain_k_groups();    // 1 query
	$k_blocks		= $cache->obtain_block_data();  // 1 query
	$k_pages		= $cache->obtain_k_pages();     // 1 query
}]]></find>
				<action type="replace-with"><![CDATA[@define('STARGATE', ($config['portal_enabled']));

if (STARGATE)
{
	@define('DEBUG_QUERIES', false);

	$k_config		= $cache->obtain_k_config();    // 1 query
	$k_resources	= $cache->obtain_k_resources(); // 1 query
	$k_blocks		= $cache->obtain_block_data();  // 1 query
	$k_pages		= $cache->obtain_k_pages();     // 1 query
	$k_groups		= $cache->obtain_k_groups();    // 1 query
	$k_menus		= $cache->obtain_k_menus();     // 1 query
}]]></action>
			</edit>
		</open>
		<open src="search.php">
			<edit>
				<find><![CDATA[				if (STARGATE)
				{
					$tool_tips = $row['topic_title'] . ' : ' . sgp_truncate_message(bbcode_strip($row[ ('last_message_tooltip') ? 'last_message_tooltip': 'first_message_tooltip']), 400) . ' ... ';
				}]]></find>
				<action type="replace-with"><![CDATA[				if (STARGATE)
				{
					$tool_tips = $row['topic_title'] . ' : ' . truncate_post(bbcode_strip($row[ ('last_message_tooltip') ? 'last_message_tooltip': 'first_message_tooltip']), 400, "") . ' ... ';
				}]]></action>
			</edit>
		</open>
		<open src="ucp.php">
			<edit>
				<find><![CDATA[		meta_refresh(3, append_sid("{$phpbb_root_path}index.$phpEx"));

		if (STARGATE)]]></find>
				<action type="replace-with"><![CDATA[		//meta_refresh(3, append_sid("{$phpbb_root_path}index.$phpEx"));

		// redirect to portal on log out? //
		global $k_config;
		if (STARGATE && isset($k_config['k_landing_page']) && $k_config['k_landing_page'] == 'portal')]]></action>
			</edit>
		</open>
		<open src="adm/style/admin.css">
			<edit>
				<find><![CDATA[/* Added by Stargate Portal
---------------------------------------- */
.imageline { 
	height:190px;
	overflow-y:scroll;
	border:none; 
	margin-top: 5px;
	padding: 5px;
}
.block_img {
	height:100px;
}
.row5 { background-color: #F9EDBD; }
.row6 { background-color: #E8DFC0; }


/* Additional reply bbcode for sgp simple editor ...
-------------------------------------------------- */
.bbb-bold, .bbb-bold a{ 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-bold.gif"); 
	width:22px; height:22px; 
}
.bbb-bold:hover{ 
	background-position: 0px -23px;}
.bbb-quote, .bbb-italic, .bbb-italic a{ 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-italic.gif");
	width:22px; height:22px;
}
.bbb-italic:hover{ 
	background-position: 0px -23px;
}
.bbb-quote, .bbb-quote a{ 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-quote.gif"); 
	width:22px; height:22px;
}
.bbb-quote:hover{ 
	background-position: 0px -23px;
}
.bbb-code, .bbb-code a{ 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-code.gif");
	width:22px; height:22px;
}
.bbb-code:hover{ 
	background-position: 0px -23px;
}
.bbb-list, .bbb-list a{ 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-list.gif");
	width:22px; height:22px;
}
.bbb-list:hover{ 
	background-position: 0px -23px;
}
.bbb-flash, .bbb-flash a{ 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-flash.gif"); 
	width:22px; height:22px;
}
.bbb-flash:hover{ 
	background-position: 0px -23px;
}
.bbb-image, .bbb-image a{ 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-image.gif"); 
	width:22px; height:22px;
}
.bbb-image:hover{ 
	background-position: 0px -23px;
}
.bbb-url, .bbb-url a{ 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-url.gif");
	width:22px; height:22px;
}
.bbb-url:hover{ 
	background-position: 0px -23px;
}
.bbb-under_line, .bbb-under_line a { 
	background:transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-under_line.gif");
	width:22px; height:22px;
}
.bbb-under_line:hover{ 
	background-position: 0px -23px;
}
.bbb-align_center, .bbb-align_center a { 
	background: transparent;
	border:none;
	background-image: url("./../../images/bbcode/bbb-icon-align_center.gif");
	width:22px; height:22px;
}
.bbb-align_center:hover{
	background-position: 0px -23px;
}
.bbb-align_left, .bbb-align_left a { 
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-align_left.gif");
	width:22px; height:22px;
}
.bbb-align_left:hover{
	background-position: 0px -23px;
}
.bbb-align_right, .bbb-align_right a {
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-align_right.gif");
	width:22px; height:22px;
}
.bbb-align_right:hover {
	background-position: 0px -23px;
}
.bbb-ordered_list, .bbb-ordered_list a {
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-ordered_list.gif");
	width:22px; height:22px;
}
.bbb-ordered_list:hover{
	background-position: 0px -23px;
}
.bbb-add_list_item, .bbb-add_list_item a {
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-add_list_item.gif"); 
	width:22px; height:22px;
}
.bbb-add_list_item:hover {
	background-position: 0px -23px;
}
.bbb-note, .bbb-note a{
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-note.gif");
	width:22px; height:22px;
}
.bbb-note:hover {
	background-position: 0px -23px;
}
.bbb-spoiler, .bbb-spoiler a{
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-spoiler.gif");
	width:22px; height:22px;
}
.bbb-spoiler:hover{
	background-position: 0px -23px;
}
.bbb-tab, .bbb-tab a{
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-tab.gif");
	width:22px; height:22px;
}
.bbb-tab:hover{
	background-position: 0px -23px;
}
.bbb-sup, .bbb-sup a{
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-sup.gif");
	width:22px; height:22px;
}
.bbb-sup:hover{
	background-position: 0px -23px;
}
.bbb-sub, .bbb-sub a{
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-sub.gif");
	width:22px; height:22px;
}
.bbb-sub:hover{
	background-position: 0px -23px;
}
.bbb-strike, .bbb-strike a{
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-strike.gif");
	width:22px; height:22px;
}
.bbb-strike:hover {
	background-position: 0px -23px;
}
.bbb-link, .bbb-link a{
	background: transparent; 
	border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-link.gif");
	width:22px; height:22px;
}
.bbb-link:hover {
	background-position: 0px -23px;
}
.rollover, .rollover a {
	display: inline; 
	float:left;
}
.rollover a:hover {
	background-position: 0 -23px;
}
.bbb-icon-spacer {
	background: transparent; border:none; 
	background-image: url("./../../images/bbcode/bbb-icon-spacer.gif"); 
	width:3px; height:22px;
}
button {border: solid 3px;}]]></find>
				<action type="replace-with"><![CDATA[/* Added by Stargate Portal
---------------------------------------- */
.imageline {
	height: 190px;
	overflow-y: scroll;
	border: none;
	margin-top: 5px;
	padding: 5px;
}
.block_img {
	height: 100px;
}
.row5 { background-color: #F9EDBD; }
.row6 { background-color: #E8DFC0; }


/* Additional reply bbcode for sgp simple editor ...
-------------------------------------------------- */
.bbb-bold, .bbb-bold a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-bold.gif");
	width: 22px;
	height: 22px;
}
.bbb-bold:hover {
	background-position: 0px -23px;
}
.bbb-quote, .bbb-italic, .bbb-italic a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-italic.gif");
	width: 22px;
	height: 22px;
}
.bbb-italic: hover {
	background-position: 0px -23px;
}
.bbb-quote, .bbb-quote a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-quote.gif");
	width: 22px;
	height: 22px;
}
.bbb-quote:hover {
	background-position: 0px -23px;
}
.bbb-code, .bbb-code a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-code.gif");
	width: 22px;
	height: 22px;
}
.bbb-code:hover {
	background-position: 0px -23px;
}
.bbb-list, .bbb-list a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-list.gif");
	width: 22px;
	height: 22px;
}
.bbb-list:hover {
	background-position: 0px -23px;
}
.bbb-flash, .bbb-flash a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-flash.gif");
	width: 22px;
	height: 22px;
}
.bbb-flash:hover {
	background-position: 0px -23px;
}
.bbb-image, .bbb-image a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-image.gif");
	width: 22px;
	height: 22px;
}
.bbb-image:hover {
	background-position: 0px -23px;
}
.bbb-url, .bbb-url a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-url.gif");
	width: 22px;
	height: 22px;
}
.bbb-url:hover {
	background-position: 0px -23px;
}
.bbb-under_line, .bbb-under_line a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-under_line.gif");
	width: 22px;
	height: 22px;
}
.bbb-under_line:hover {
	background-position: 0px -23px;
}
.bbb-align_center, .bbb-align_center a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-align_center.gif");
	width: 22px;
	height: 22px;
}
.bbb-align_center:hover {
	background-position: 0px -23px;
}
.bbb-align_left, .bbb-align_left a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-align_left.gif");
	width: 22px;
	height: 22px;
}
.bbb-align_left:hover {
	background-position: 0px -23px;
}
.bbb-align_right, .bbb-align_right a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-align_right.gif");
	width: 22px;
	height: 22px;
}
.bbb-align_right:hover {
	background-position: 0px -23px;
}
.bbb-ordered_list, .bbb-ordered_list a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-ordered_list.gif");
	width: 22px;
	height: 22px;
}
.bbb-ordered_list:hover {
	background-position: 0px -23px;
}
.bbb-add_list_item, .bbb-add_list_item a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-add_list_item.gif");
	width: 22px;
	height: 22px;
}
.bbb-add_list_item:hover {
	background-position: 0px -23px;
}
.bbb-note, .bbb-note a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-note.gif");
	width: 22px;
	height: 22px;
}
.bbb-note:hover {
	background-position: 0px -23px;
}
.bbb-spoiler, .bbb-spoiler a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-spoiler.gif");
	width: 22px;
	height: 22px;
}
.bbb-spoiler:hover {
	background-position: 0px -23px;
}
.bbb-tab, .bbb-tab a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-tab.gif");
	width: 22px;
	height: 22px;
}
.bbb-tab:hover {
	background-position: 0px -23px;
}
.bbb-sup, .bbb-sup a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-sup.gif");
	width: 22px;
	height: 22px;
}
.bbb-sup:hover {
	background-position: 0px -23px;
}
.bbb-sub, .bbb-sub a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-sub.gif");
	width: 22px;
	height: 22px;
}
.bbb-sub:hover {
	background-position: 0px -23px;
}
.bbb-strike, .bbb-strike a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-strike.gif");
	width: 22px;
	height: 22px;
}
.bbb-strike:hover {
	background-position: 0px -23px;
}
.bbb-link, .bbb-link a {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-link.gif");
	width: 22px;
	height: 22px;
}
.bbb-link:hover {
	background-position: 0px -23px;
}
.rollover, .rollover a {
	display: inline;
	float: left;
}
.rollover a:hover {
	background-position: 0 -23px;
}
.bbb-icon-spacer {
	background: transparent;
	border: none;
	background-image: url("./../../images/bbcode/bbb-icon-spacer.gif");
	width: 3px;
	height: 22px;
}
button { border: solid 3px; }]]></action>
			</edit>
		</open>
		<open src="includes/cache.php">
			<edit>
				<find><![CDATA[	function obtain_k_config()
	{
		global $db;

		if (($k_config = $this->get('k_config')) !== false)
		{
			$sql = 'SELECT config_name, config_value
				FROM ' . K_BLOCKS_CONFIG_VAR_TABLE . '
				WHERE is_dynamic = 1';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_config[$row['config_name']] = $row['config_value'];
			}
			$db->sql_freeresult($result);
		}
		else
		{
			$k_config = $k_cached_config = array();

			$sql = 'SELECT config_name, config_value, is_dynamic
				FROM ' . K_BLOCKS_CONFIG_VAR_TABLE;
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				if (!$row['is_dynamic'])
				{
					$k_cached_config[$row['config_name']] = $row['config_value'];
				}
				$k_config[$row['config_name']] = $row['config_value'];
			}
			$db->sql_freeresult($result);

			$this->put('k_config', $k_cached_config);
		}

		return $k_config;
	}

	function obtain_block_data()
	{
		global $db;

		if (($k_blocks = $this->get('k_blocks')) !== false)
		{
			$sql = 'SELECT *
				FROM ' . K_BLOCKS_TABLE . '
				WHERE active = 1 AND is_static = 0 ORDER BY ndx ASC';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				if (!$row['is_static'])
				{
					$k_blocks[$row['id']]['id']				= $row['id'];
					$k_blocks[$row['id']]['ndx']			= $row['ndx'];
					$k_blocks[$row['id']]['title']			= $row['title'];
					$k_blocks[$row['id']]['position']		= $row['position'];
					$k_blocks[$row['id']]['type']			= $row['type'];
					$k_blocks[$row['id']]['view_groups']		= $row['view_groups'];
					$k_blocks[$row['id']]['scroll']			= $row['scroll'];
					$k_blocks[$row['id']]['block_height']	= $row['block_height'];
					$k_blocks[$row['id']]['html_file_name']	= $row['html_file_name'];
					$k_blocks[$row['id']]['html_file_name']	= $row['html_file_name'];
					$k_blocks[$row['id']]['img_file_name']	= $row['img_file_name'];
					$k_blocks[$row['id']]['block_cache_time']	= $row['block_cache_time'];
				}
			}
			$db->sql_freeresult($result);
		}
		else
		{
			$k_blocks = $k_cached_blocks = array();

			$sql = 'SELECT *
				FROM ' . K_BLOCKS_TABLE . '
				WHERE active = 1 ORDER BY ndx ASC';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				if ($row['is_static'])
				{
					$k_cached_blocks[$row['id']]['id']				= $row['id'];
					$k_cached_blocks[$row['id']]['ndx']				= $row['ndx'];
					$k_cached_blocks[$row['id']]['title']			= $row['title'];
					$k_cached_blocks[$row['id']]['position']		= $row['position'];
					$k_cached_blocks[$row['id']]['active']			= $row['active'];
					$k_cached_blocks[$row['id']]['type']			= $row['type'];
					$k_cached_blocks[$row['id']]['view_groups']			= $row['view_groups'];
					$k_cached_blocks[$row['id']]['scroll']			= $row['scroll'];
					$k_cached_blocks[$row['id']]['block_height']	= $row['block_height'];
					$k_cached_blocks[$row['id']]['html_file_name']	= $row['html_file_name'];
					$k_cached_blocks[$row['id']]['img_file_name']	= $row['img_file_name'];
					$k_cached_blocks[$row['id']]['block_cache_time']	= $row['block_cache_time'];
				}
				$k_blocks[$row['id']]['id']				= $row['id'];
				$k_blocks[$row['id']]['ndx']			= $row['ndx'];
				$k_blocks[$row['id']]['title']			= $row['title'];
				$k_blocks[$row['id']]['position']		= $row['position'];
				$k_blocks[$row['id']]['type']			= $row['type'];
				$k_blocks[$row['id']]['view_groups']		= $row['view_groups'];
				$k_blocks[$row['id']]['scroll']			= $row['scroll'];
				$k_blocks[$row['id']]['block_height']	= $row['block_height'];
				$k_blocks[$row['id']]['html_file_name']	= $row['html_file_name'];
				$k_blocks[$row['id']]['html_file_name']	= $row['html_file_name'];
				$k_blocks[$row['id']]['img_file_name']	= $row['img_file_name'];
				$k_blocks[$row['id']]['block_cache_time']	= $row['block_cache_time'];
			}
			$db->sql_freeresult($result);

			$this->put('k_blocks', $k_cached_blocks);
		}

		return $k_blocks;
	}

	function obtain_k_pages()
	{
		global $db;

		if (($k_pages = $this->get('k_pages')) !== false)
		{
			$sql = 'SELECT page_id, page_name
				FROM ' . K_PAGES_TABLE;

			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_pages[$row['page_id']]['page_id'] = $row['page_id'];
				$k_pages[$row['page_id']]['page_name'] = $row['page_name'];
			}
			$db->sql_freeresult($result);
		}
		else
		{
			$k_pages = $k_pages_cache = array();

			$sql = 'SELECT page_id, page_name
				FROM ' . K_PAGES_TABLE;

			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_pages[$row['page_id']]['page_id'] = $row['page_id'];
				$k_pages[$row['page_id']]['page_name'] = $row['page_name'];
			}
			$db->sql_freeresult($result);

			$this->put('k_pages', $k_pages_cache);
		}
		return $k_pages;
	}


	//
	// get all group names/id's (used to avoid problems with group ID's changing)
	//
	function obtain_k_groups()
	{
		global $db;

		if (($k_groups = $this->get('k_groups')) !== false)
		{
			// Get us all the groups
			$sql = 'SELECT group_id, group_name
				FROM ' . GROUPS_TABLE . '
				ORDER BY group_id ASC, group_name';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_groups[$row['group_id']]['group_id'] = $row['group_id'];
				$k_groups[$row['group_id']]['group_name'] = $row['group_name'];
			}
			$db->sql_freeresult($result);
		}
		else
		{
			$k_groups = $k_cached_groups = array();

			// Get us all the groups
			$sql = 'SELECT group_id, group_name
				FROM ' . GROUPS_TABLE . '
				ORDER BY group_id ASC, group_name';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_cached_groups[$row['group_id']]['group_id'] = $row['group_id'];
				$k_cached_groups[$row['group_id']]['group_name'] = $row['group_name'];
			}
			$db->sql_freeresult($result);

			$this->put('k_groups', $k_cached_groups);
		}
		return $k_groups;
	}

	function obtain_k_resources()
	{
		global $db;

		if (($k_resources = $this->get('k_resources')) !== false)
		{
			$sql = 'SELECT *
				FROM ' . K_RESOURCES_TABLE  . '
				ORDER BY word ASC';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				/*
				$k_resources['id'] = $row['id'];
				$k_resources['word'] = $row['word'];
				$k_resources['type'] = $row['type'];
				*/
				$k_resources[] = $row['word'];

			}
			$db->sql_freeresult($result);
		}
		else
		{
			$k_resources = $k_cached_resources = array();

			$sql = 'SELECT *
				FROM ' . K_RESOURCES_TABLE  . '
				ORDER BY word ASC';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				/*
				$k_resources['id'] = $row['id'];
				$k_resources['word'] = $row['word'];
				$k_resources['type'] = $row['type'];
				*/
				$k_resources[] = $row['word'];
			}
			$db->sql_freeresult($result);

			$this->put('k_resources', $k_cached_resources);
		}
		return $k_resources;
	}]]></find>
				<action type="replace-with"><![CDATA[	function obtain_k_config()
	{
		global $db;

		if (($k_config = $this->get('k_config')) !== false)
		{
			$sql = 'SELECT config_name, config_value
				FROM ' . K_BLOCKS_CONFIG_VAR_TABLE . '
				WHERE is_dynamic = 1';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_config[$row['config_name']] = $row['config_value'];
			}
			$db->sql_freeresult($result);
		}
		else
		{
			$k_config = $k_cached_config = array();

			$sql = 'SELECT config_name, config_value, is_dynamic
				FROM ' . K_BLOCKS_CONFIG_VAR_TABLE;
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				if (!$row['is_dynamic'])
				{
					$k_cached_config[$row['config_name']] = $row['config_value'];
				}
				$k_config[$row['config_name']] = $row['config_value'];
			}
			$db->sql_freeresult($result);

			$this->put('k_config', $k_cached_config);
		}

		return $k_config;
	}


	function obtain_k_menus($force_cashing = false)
	{
		global $db;

		if (($k_menus = $this->get('k_menus')) === false || $force_cashing == true)
		{
			$sql = "SELECT * FROM ". K_MENUS_TABLE . "
				ORDER BY menu_type, ndx";

			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_menus[$row['m_id']]['m_id'] = $row['m_id'];
				$k_menus[$row['m_id']]['ndx'] = $row['ndx'];
				$k_menus[$row['m_id']]['menu_type'] = $row['menu_type'];
				$k_menus[$row['m_id']]['name'] = $row['name'];
				$k_menus[$row['m_id']]['link_to'] = $row['link_to'];
				$k_menus[$row['m_id']]['extern'] = $row['extern'];
				$k_menus[$row['m_id']]['menu_icon'] = $row['menu_icon'];
				$k_menus[$row['m_id']]['append_sid'] = $row['append_sid'];
				$k_menus[$row['m_id']]['append_uid'] = $row['append_uid'];
				$k_menus[$row['m_id']]['view_all'] = $row['view_all'];
				$k_menus[$row['m_id']]['view_groups'] = $row['view_groups'];
				$k_menus[$row['m_id']]['soft_hr'] = $row['soft_hr'];
				$k_menus[$row['m_id']]['sub_heading'] = $row['sub_heading'];
			}
			$db->sql_freeresult($result);
			$this->put('k_menus', $k_menus);
		}
		return $k_menus;
	}

	function obtain_block_data()
	{
		global $db;

		if (($k_blocks = $this->get('k_blocks')) === false)
		{
			$sql = 'SELECT *
				FROM ' . K_BLOCKS_TABLE . '
				WHERE active = 1 ORDER BY ndx ASC';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_blocks[$row['id']]['id']              = $row['id'];
				$k_blocks[$row['id']]['ndx']             = $row['ndx'];
				$k_blocks[$row['id']]['title']            = $row['title'];
				$k_blocks[$row['id']]['position']         = $row['position'];
				$k_blocks[$row['id']]['type']             = $row['type'];
				$k_blocks[$row['id']]['view_groups']      = $row['view_groups'];
				$k_blocks[$row['id']]['view_all']         = $row['view_all'];
				$k_blocks[$row['id']]['scroll']           = $row['scroll'];
				$k_blocks[$row['id']]['block_height']     = $row['block_height'];
				$k_blocks[$row['id']]['html_file_name']   = $row['html_file_name'];
				$k_blocks[$row['id']]['img_file_name']    = $row['img_file_name'];
				$k_blocks[$row['id']]['block_cache_time'] = $row['block_cache_time'];
			}
			$db->sql_freeresult($result);
			$this->put('k_blocks', $k_blocks);
		}
		return $k_blocks;
	}

	function obtain_k_pages()
	{
		global $db;

		if (($k_pages = $this->get('k_pages')) === false)
		{
			$sql = 'SELECT page_id, page_name
				FROM ' . K_PAGES_TABLE;

			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_pages[$row['page_id']]['page_id'] = $row['page_id'];
				$k_pages[$row['page_id']]['page_name'] = $row['page_name'];
			}
			$db->sql_freeresult($result);
			$this->put('k_pages', $k_pages);
		}
		return $k_pages;
	}


	//
	// get all group names/id's (used to avoid problems with group ID's changing)
	//
	function obtain_k_groups()
	{
		global $db;

		if (($k_groups = $this->get('k_groups')) === false)
		{
			// Get us all the groups
			$sql = 'SELECT group_id, group_name
				FROM ' . GROUPS_TABLE . '
				ORDER BY group_id ASC, group_name';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_groups[$row['group_id']]['group_id'] = $row['group_id'];
				$k_groups[$row['group_id']]['group_name'] = $row['group_name'];
			}
			$db->sql_freeresult($result);
			$this->put('k_groups', $k_groups);
		}
		return $k_groups;
	}

	function obtain_k_resources()
	{
		global $db;

		if (($k_resources = $this->get('k_resources')) === false)
		{
			$sql = 'SELECT *
				FROM ' . K_RESOURCES_TABLE  . '
				ORDER BY word ASC';
			$result = $db->sql_query($sql);

			while ($row = $db->sql_fetchrow($result))
			{
				$k_resources[] = $row['word'];

			}
			$db->sql_freeresult($result);
			$this->put('k_resources', $k_resources);
		}
		return $k_resources;
	}]]></action>
			</edit>
		</open>
		<open src="includes/functions.php">
			<edit>
				<find><![CDATA[			if (STARGATE)
			{
				/* Code will redirect to portal if the user logs in on the portal page,
				   if the user logs on on the index page they will be returned to the index...
				   To return to the portal page form all logins, remove the comments below...
				*/

				if ($redirect === "index.$phpEx")
				{
					$redirect = "portal.$phpEx";
				}
				/*
				else if ($redirect === "index.$phpEx?")
				{
					$redirect = "portal.$phpEx?";
				}
				else if ($redirect === "{$phpbb_root_path}index.$phpEx?")
				{
					$redirect = "{$phpbb_root_path}portal.$phpEx?";
				}
				*/
				else if ($redirect === "{$phpbb_root_path}index.$phpEx")
				{
					$redirect = "{$phpbb_root_path}portal.$phpEx";
				}

				$l_redirect = ($admin) ? $user->lang['PROCEED_TO_ACP'] : (($redirect === "{$phpbb_root_path}portal.$phpEx" || $redirect === "portal.$phpEx") ? $user->lang['RETURN_PORTAL'] : $user->lang['RETURN_PAGE']);
			}
			else
			{
				$l_redirect = ($admin) ? $user->lang['PROCEED_TO_ACP'] : (($redirect === "{$phpbb_root_path}index.$phpEx" || $redirect === "index.$phpEx") ? $user->lang['RETURN_INDEX'] : $user->lang['RETURN_PAGE']);
			}]]></find>
				<action type="replace-with"><![CDATA[				$l_redirect = ($admin) ? $user->lang['PROCEED_TO_ACP'] : (($redirect === "{$phpbb_root_path}index.$phpEx" || $redirect === "index.$phpEx") ? $user->lang['RETURN_INDEX'] : $user->lang['RETURN_PAGE']);]]></action>
			</edit>
		</open>
		<open src="includes/functions_posting.php">
			<edit>
				<find><![CDATA[		'sticky'	=> array('const' => POST_STICKY, 'lang' => 'POST_STICKY'),
		'announce'	=> array('const' => POST_ANNOUNCE, 'lang' => 'POST_ANNOUNCEMENT'),

		'news'		=> array('const' => POST_NEWS, 'lang' => 'POST_NEWS'),
		'news_global'	=> array('const' => POST_NEWS_GLOBAL, 'lang' => 'POST_NEWS_GLOBAL'),
		'global'	=> array('const' => POST_GLOBAL, 'lang' => 'POST_GLOBAL')]]></find>
				<action type="replace-with"><![CDATA[		'sticky'	=> array('const' => POST_STICKY, 'lang' => 'POST_STICKY'),
		'announce'	=> array('const' => POST_ANNOUNCE, 'lang' => 'POST_ANNOUNCEMENT'),
		'global'	=> array('const' => POST_GLOBAL, 'lang' => 'POST_GLOBAL'),
		'news'		=> array('const' => POST_NEWS, 'lang' => 'POST_NEWS'),
		'news_global'	=> array('const' => POST_NEWS_GLOBAL, 'lang' => 'POST_NEWS_GLOBAL')]]></action>
			</edit>
		</open>
		<open src="includes/session.php">
			<edit>
				<find><![CDATA[		if (!$this->theme)
		{
			// SGP edit: Report missing style and redirect to default style.
			// This stops bots generating countless errors.

			add_log('critical', 'STYLE_MISSING', request_var('style', 0), $user->data['user_id']);
			redirect(build_url('style') .'?style='. $config['default_style']);

			//trigger_error('NO_STYLE_DATA', E_USER_ERROR);
		}]]></find>
				<action type="replace-with"><![CDATA[		if (!$this->theme)
		{
			// SGP edit: Report missing style and redirect to default style.
			// This stops bots generating countless errors.

			add_log('critical', 'STYLE_MISSING', request_var('style', 0), $user->data['user_id']);
			redirect(build_url('style') .'?style='. $config['default_style']);
		}]]></action>
			</edit>
		</open>
		<open src="styles/prosilver/template/memberlist_search.html">
			<edit>
				<find><![CDATA[<script type="text/javascript" src="{ROOT_PATH}js/forum_fn.js"></script>]]></find>
				<action type="replace-with"><![CDATA[<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/forum_fn.js"></script>]]></action>
			</edit>
		</open>
		<open src="styles/prosilver/template/overall_header.html">
			<edit>
				<find><![CDATA[<script type="text/javascript" src="{ROOT_PATH}js/styleswitcher.js"></script>
<script type="text/javascript" src="{ROOT_PATH}js/forum_fn.js"></script>]]></find>
				<action type="replace-with"><![CDATA[<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/styleswitcher.js"></script>
<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/forum_fn.js"></script>]]></action>
			</edit>
		</open>
		<open src="styles/prosilver/template/posting_buttons.html">
			<edit>
				<find><![CDATA[<script type="text/javascript" src="{ROOT_PATH}js/editor.js"></script>]]></find>
				<action type="replace-with"><![CDATA[<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/editor.js"></script>]]></action>
			</edit>
		</open>
		<open src="styles/prosilver/template/posting_smilies.html">
			<edit>
				<find><![CDATA[<script type="text/javascript" src="{ROOT_PATH}js/editor.js"></script>]]></find>
				<action type="replace-with"><![CDATA[<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/editor.js"></script>]]></action>
			</edit>
		</open>
		<open src="styles/prosilver/template/simple_header.html">
			<edit>
				<find><![CDATA[<script type="text/javascript" src="{ROOT_PATH}js/styleswitcher.js"></script>
<script type="text/javascript" src="{ROOT_PATH}js/forum_fn.js"></script>]]></find>
				<action type="replace-with"><![CDATA[<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/styleswitcher.js"></script>
<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/forum_fn.js"></script>]]></action>
			</edit>
		</open>
		<open src="styles/subsilver2/template/posting_buttons.html">
			<edit>
				<find><![CDATA[		<script type="text/javascript" src="{ROOT_PATH}js/editor.js"></script>]]></find>
				<action type="replace-with"><![CDATA[		<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/editor.js"></script>]]></action>
			</edit>
		</open>
		<open src="styles/subsilver2/template/posting_smilies.html">
			<edit>
				<find><![CDATA[<script type="text/javascript" src="{ROOT_PATH}js/editor.js"></script>]]></find>
				<action type="replace-with"><![CDATA[<script type="text/javascript" src="{T_SUPER_TEMPLATE_PATH}/editor.js"></script>]]></action>
			</edit>
		</open>
		<php-installer><![CDATA[portal_install/index.php]]></php-installer>
		<diy-instructions lang="en"><![CDATA[Don't forget to make a backup before updating.]]></diy-instructions>
	</action-group>
</mod>
